version: '3'
services:
  nginx:
    image: openresty/openresty:alpine
    container_name: nginx
    privileged: true
    links:
      - php71
      - php_swoole
    ports:
      - "80:80"
      - "443:443"
    restart: always
    command: nginx -g 'daemon off;'
    volumes:
      - ./openresty/nginx/conf.d:/etc/nginx/conf.d/
      - ./openresty/nginx/conf.d/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./openresty/nginx/logs:/usr/local/openresty/nginx/logs/
      - /alidata/wwwroot:/usr/share/nginx/html
      - /alidata/webroot:/usr/share/nginx/web

  php71:
    image: php:7.1-fpm
    container_name: php71
    privileged: true
    ports:
      - "9000"
    links:
      - mysql  #容器之间进行关联
    volumes:
      - ./php71/php.ini:/usr/local/etc/php/php.ini:ro # 当前php配置文件；可以拷贝修改php-dev.ini为想要的配置
      - ./php71/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      - ./php71/ext/conf.d:/usr/local/etc/php/conf.d
      - ./php71:/usr/src/php
      - /alidata/wwwroot:/usr/share/nginx/html  #挂载卷，需要注意的是，php在以模块的形式加载到nginx的时候，需要他们两个的目录结构一致，否则nginx无法加载php,但是 html等静态问价可以正常访问。
  php_swoole:
    hostname: php_swoole
    restart: always
    container_name: php_swoole
    image: 114.116.102.175:6080/library/php_swoole:v1.0
    #build:
    #  context: ./php81
    #  dockerfile: Dockerfile
    environment:
      DISABLE_DEFAULT_SERVER: 1
    privileged: true
    ports:
      - "9501:9501"
    links:
      - mysql
    volumes:
      - /alidata/wwwroot:/usr/share/nginx/html

  mysql: #项目名称
    image: mysql:5.7 #镜像名称，如果是通过dockerfile创建的可以使用build属性
    container_name: mysql  #容器名称，如果没有这个属性的话，docker-compose会随机分配一个名字给容器
    privileged: true    #允许操作的表示，如果不加的话会出现类似，permission deny的错误
    ports:
      - 3307:3306  #开放宿主机和容器的映射端口
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456  #mysql镜像中的环境变量
    volumes:
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/logs:/var/lib/mysql-logs:rw
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
  redis:
    image: redis:7.0.2
    restart: always
    container_name: redis
    privileged: true
    ports:
      - 6379:6379
  #mongo:
  #  image: mongo
  #  restart: always
  #  container_name: mongo
  #  ports:
  #    - 27017:27017

