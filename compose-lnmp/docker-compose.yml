version: '3'

services:
  nginx:
    image: openresty/openresty:alpine
    container_name: nginx
    privileged: true
    links:
      - php71
      - php74
      #- php81_swoole
    ports:
      - "8088:80"
      - "443:443"
    restart: always
    command: nginx -g 'daemon off;'
    volumes:
      - ./openresty/nginx/conf.d:/etc/nginx/conf.d/
      - ./openresty/nginx/conf.d/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ./openresty/nginx/logs:/usr/local/openresty/nginx/logs/
      - /Users/xiaojuezhi/www:/usr/share/nginx/html
      - /Users/xiaojuezhi/web:/usr/share/nginx/web
  php71:
    image: php:7.1-fpm
    container_name: php71
    privileged: true
    ports:
      - "9000"
    links:
      - mysql
      - redis
    networks:
      - default
      - service_network
    volumes:
      - ./php71/php.ini:/usr/local/etc/php/php.ini:ro # 当前php配置文件；可以拷贝修改php-dev.ini为想要的配置
      - ./php71/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      - ./php71/ext/conf.d:/usr/local/etc/php/conf.d
      - ./php71/ext/extensions:/usr/local/lib/php/ext/extensions
      - ./php71:/usr/src/php
      - /Users/xiaojuezhi/www:/usr/share/nginx/html  #挂载卷，需要注意的是，php在以模块的形式加载到nginx的时候，需要他们两个的目录结构一致，否则nginx无法加载php,但是 html等静态问价可以正常访问。
  php74:
    image: php:7.4.33-fpm
    container_name: php74
    privileged: true
    ports:
      - "9000"
    links:
      - mysql
      - redis
    networks:
      - default
      - service_network
    volumes:
      - ./php74/php.ini:/usr/local/etc/php/php.ini:ro
      - ./php74/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
      - ./php74/ext/conf.d:/usr/local/etc/php/conf.d
      - ./php74/ext/extensions:/usr/local/lib/php/ext/extensions
      - /Users/xiaojuezhi/www:/usr/share/nginx/html
  # php81_swoole:
  #   hostname: php81_swoole
  #   restart: always
  #   container_name: php81_swoole
  #   image: 114.116.102.175:6080/library/php81_swoole:v1.0
  #   #build:
  #   #  context: ./php81
  #   #  dockerfile: Dockerfile
  #   environment:
  #     DISABLE_DEFAULT_SERVER: 1
  #   privileged: true
  #   ports:
  #     - "9501:9501"
  #   links:
  #     - mysql
  #     - redis
  #   volumes:
  #     - /Users/xiaojuezhi/www:/usr/share/nginx/html

  mysql: #项目名称
    image: mysql:5.7 #镜像名称，如果是通过dockerfile创建的可以使用build属性
    container_name: mysql  #容器名称，如果没有这个属性的话，docker-compose会随机分配一个名字给容器
    privileged: true    #允许操作的表示，如果不加的话会出现类似，permission deny的错误
    ports:
      - 3307:3306  #开放宿主机和容器的映射端口
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: 123456  #mysql镜像中的环境变量
    networks:
      - default
      - service_network
    volumes:
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/logs:/var/lib/mysql-logs:rw
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
  redis:
    image: redis:7.0.2-alpine
    restart: always
    container_name: redis
    privileged: true
    ports:
      - 6380:6379
    networks:
      - default
      - service_network
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - 27017:27017
    networks:
      - default
      - service_network
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 123456
    privileged: true
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - default
      - service_network
    volumes:
      - "./rabbitmq/data:/var/lib/rabbitmq"  # 持久化RabbitMQ数据
      - "./rabbitmq/log:/var/log/rabbitmq/log"

# 构建网络
networks:
  service_network:
    driver: bridge
    name: service-network
    external: true
